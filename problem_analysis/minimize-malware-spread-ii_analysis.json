{
  "problem_name": "minimize-malware-spread-ii",
  "data_structures": [
    [
      "adjacency matrix",
      "list",
      "set",
      "UnionFind data structure",
      "hashmap"
    ]
  ],
  "category": "Graphs",
  "algorithm_technique": [
    "Union-Find to identify connected components and their sizes.",
    "Iterate through initial infected nodes, calculate saved nodes if removed."
  ],
  "problem_summary_simple": "Remove one infected node to minimize total infected nodes after spread.",
  "problem_summary_technical": "Use Union-Find to find connected components. Calculate saved nodes by removing an infected node from components with only one initial infection.",
  "time_complexity": [
    "O(n^2)"
  ],
  "space_complexity": [
    "O(n)"
  ],
  "key_insights": [
    [
      "The problem can be modeled as finding connected components in a graph.",
      "Removing an infected node saves its entire connected component if it's the *only* infected node in that component.",
      "If a component has multiple initial infections, removing one node from it doesn't prevent spread from other initial infections within that component."
    ]
  ],
  "difficulty_level": "Hard",
  "analysis_timestamp": "2025-07-16 21:56:09",
  "batch_processed": true,
  "batch_size": 5
}