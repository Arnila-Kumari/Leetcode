{
  "problem_name": "minimum-difference-in-sums-after-removal-of-elements",
  "data_structures": [
    [
      "array",
      "max-heap",
      "min-heap",
      "prefix sum array"
    ]
  ],
  "category": "Heap / Priority Queue",
  "algorithm_technique": [
    "Use prefix sums and heaps to efficiently calculate sums of first and second halves after removals."
  ],
  "problem_summary_simple": "Remove n elements from a 3n array, then find the minimum difference between the sums of two n-element halves.",
  "problem_summary_technical": "Partition 3n array into three n-element parts. Remove one part, minimize sum(first n) - sum(second n) of remaining.",
  "time_complexity": [
    "O(n log n)"
  ],
  "space_complexity": [
    "O(n)"
  ],
  "key_insights": [
    [
      "The problem can be broken down into considering which n elements are removed.",
      "To minimize the difference, we want to remove elements that contribute most to the imbalance.",
      "Prefix sums combined with heaps (max-heap for the first part, min-heap for the second) allow efficient calculation of sums and tracking of optimal removals."
    ]
  ],
  "difficulty_level": "Hard",
  "analysis_timestamp": "2025-07-16 21:57:28",
  "batch_processed": true,
  "batch_size": 5
}