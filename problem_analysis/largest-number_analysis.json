{
  "problem_name": "largest-number",
  "data_structures": [
    [
      "list",
      "string"
    ]
  ],
  "category": "Greedy",
  "algorithm_technique": [
    "Custom sorting of numbers as strings to ensure lexicographically largest concatenation."
  ],
  "problem_summary_simple": "Arrange numbers to form the largest possible number.",
  "problem_summary_technical": "Sort numbers as strings using a custom comparator that prioritizes lexicographically larger concatenations.",
  "time_complexity": [
    "O(n log n)"
  ],
  "space_complexity": [
    "O(1)"
  ],
  "key_insights": [
    [
      "The problem is not about sorting numbers numerically, but about their string representations and how they combine.",
      "The custom comparator `cmp(y + x, x + y)` is the key: it ensures that if `y+x` is lexicographically larger than `x+y`, then `y` should come before `x`.",
      "Handling the edge case of all zeros (e.g., [0, 0]) requires stripping leading zeros and returning '0'."
    ]
  ],
  "difficulty_level": "Medium",
  "analysis_timestamp": "2025-07-16 21:48:30",
  "batch_processed": true,
  "batch_size": 5
}