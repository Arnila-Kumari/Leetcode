{
  "problem_name": "sum-of-all-subset-xor-totals",
  "data_structures": [
    [
      "integer"
    ]
  ],
  "category": "Bit Manipulation",
  "algorithm_technique": [
    "Bitwise OR to find the OR of all elements, then multiply by 2^(n-1)"
  ],
  "problem_summary_simple": "Calculate the sum of XOR totals for all possible subsets of a given array.",
  "problem_summary_technical": "Leverages the property that each bit position contributes 2^(n-1) to the total sum if it's set in at least one number.",
  "time_complexity": [
    "O(n)"
  ],
  "space_complexity": [
    "O(1)"
  ],
  "key_insights": [
    [
      "The XOR sum of all subsets can be calculated by considering each bit position independently.",
      "If a bit is set in any number in the input array, it will be set in exactly half of the subsets.",
      "The OR of all numbers in the array gives us the bits that are set in at least one number."
    ]
  ],
  "difficulty_level": "Medium",
  "analysis_timestamp": "2025-07-16 22:11:23",
  "batch_processed": true,
  "batch_size": 5
}