{
  "problem_name": "candy-crush",
  "data_structures": [
    [
      "2D array"
    ]
  ],
  "category": "2-D Dynamic Programming",
  "algorithm_technique": [
    "Iterative simulation with marking and gravity: crush, then drop."
  ],
  "problem_summary_simple": "Crush adjacent candies of the same type, let them fall, and repeat until no more crushes are possible.",
  "problem_summary_technical": "Simulate candy crush game: mark candies for crushing, then apply gravity to fill empty spaces, repeating until stable.",
  "time_complexity": [
    "O((R * C)^2)"
  ],
  "space_complexity": [
    "O(1)"
  ],
  "key_insights": [
    [
      "Marking candies for crushing (e.g., with negative values) is crucial to handle simultaneous crushes.",
      "The gravity simulation needs to be done column by column.",
      "The process repeats until no changes occur in an iteration, indicating stability."
    ]
  ],
  "difficulty_level": "Medium",
  "analysis_timestamp": "2025-07-16 21:33:42",
  "batch_processed": true,
  "batch_size": 5
}