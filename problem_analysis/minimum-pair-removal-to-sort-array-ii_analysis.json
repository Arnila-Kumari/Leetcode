{
  "problem_name": "minimum-pair-removal-to-sort-array-ii",
  "data_structures": [
    [
      "SortedList",
      "list",
      "range"
    ]
  ],
  "category": "Greedy",
  "algorithm_technique": [
    "Simulation with a doubly linked list and a sorted list to manage minimum sum pairs."
  ],
  "problem_summary_simple": "Repeatedly merge adjacent pairs with the minimum sum until the array is non-decreasing.",
  "problem_summary_technical": "Simulates merging adjacent pairs with minimum sum using a SortedList to efficiently find the minimum and a doubly linked list to manage array structure.",
  "time_complexity": [
    "O(n log n)"
  ],
  "space_complexity": [
    "O(n)"
  ],
  "key_insights": [
    [
      "The problem is identical to 'minimum-pair-removal-to-sort-array-i' in terms of logic and solution approach.",
      "The constraints are larger, but the greedy simulation strategy remains effective.",
      "The use of `sortedcontainers.SortedList` is key for performance."
    ]
  ],
  "difficulty_level": "Medium",
  "analysis_timestamp": "2025-07-16 21:59:35",
  "batch_processed": true,
  "batch_size": 5
}