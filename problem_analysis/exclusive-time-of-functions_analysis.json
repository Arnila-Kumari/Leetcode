{
  "problem_name": "exclusive-time-of-functions",
  "data_structures": [
    [
      "list",
      "stack",
      "integer"
    ]
  ],
  "category": "Stack",
  "algorithm_technique": [
    "Stack-based simulation of function calls and execution time tracking"
  ],
  "problem_summary_simple": "Calculate the exclusive execution time for each function given a list of start/end logs.",
  "problem_summary_technical": "Uses a stack to track active function calls. When a function starts, its time is deducted from the previous function. When it ends, its time is added, and the stack is updated.",
  "time_complexity": [
    "O(n)"
  ],
  "space_complexity": [
    "O(n)"
  ],
  "key_insights": [
    [
      "A stack is crucial for managing nested function calls and determining which function is currently executing.",
      "The 'prev' variable is essential to track the start of the current time interval for calculating durations.",
      "When a function starts, the time elapsed since the 'prev' timestamp belongs to the function at the top of the stack.",
      "When a function ends, the time elapsed (including the end timestamp) belongs to the function that just ended."
    ]
  ],
  "difficulty_level": "Medium",
  "analysis_timestamp": "2025-07-16 21:41:45",
  "batch_processed": true,
  "batch_size": 5
}